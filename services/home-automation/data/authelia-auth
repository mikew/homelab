#!/usr/bin/env python
import argparse
import os

import requests
from requests.auth import HTTPBasicAuth

username = os.environ.get('username')
password = os.environ.get('password')

if username == None:
    raise Exception('Environment variable missing: username')

if password == None:
    raise Exception('Environment variable missing: password')

parser = argparse.ArgumentParser()
parser.add_argument(
    '--authelia-base',
    required=True,
)
parser.add_argument(
    '--authelia-header-email',
    default='Remote-Email',
)
parser.add_argument(
    '--authelia-header-groups',
    default='Remote-Groups',
)
parser.add_argument(
    '--authelia-header-full-name',
    default='Remote-Name',
)
parser.add_argument(
    '--authelia-admin-group',
    default='admins',
)
parser.add_argument(
    '--authelia-home-assistant-proto',
    default='https',
    choices=['http', 'https'],
)
parser.add_argument(
    '--authelia-home-assistant-domain',
    required=True,
)

args = vars(parser.parse_args())

basic = HTTPBasicAuth(username, password)
headers = {
    'X-Forwarded-Proto': args['authelia_home_assistant_proto'],
    'X-Forwarded-Host': args['authelia_home_assistant_domain'],
    'X-Forwarded-URI': '/',
}
request = requests.get(
    f"{args['authelia_base']}/api/verify?auth=basic",
    auth=basic,
    headers=headers,
)

if not request.ok:
    raise Exception('Could not log in')

full_name = request.headers.get(args['authelia_header_full_name'], '')
# email = request.headers.get(args['authelia_header_email'], '')
groups = request.headers.get(args['authelia_header_groups'], '').split(',')
is_admin = args['authelia_admin_group'] in groups
home_assistant_group = 'system-admin' if is_admin else 'system-users'

print(f"name = {full_name}")
print(f"group = {home_assistant_group}")
print(f"local_only = false")
